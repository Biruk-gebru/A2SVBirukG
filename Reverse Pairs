class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        

        def merge(nums, low, high, mid, counter):
            temp = []
            i, j = low, mid + 1
            while i <= mid and j <= high:
                if nums[i] > 2 * nums[j]:
                    counter[0] += mid-i+1
                    j+=1
                else:
                    i+=1
            i, j = low, mid + 1
            while i <= mid and j <= high:
                if nums[i] <= nums[j]:
                    temp.append(nums[i])
                    i += 1
                else:
                    temp.append(nums[j])
                    j += 1

            # Copy remaining elements from left and right halves
            while i <= mid:
                temp.append(nums[i])
                i += 1
            while j <= high:
                temp.append(nums[j])
                j += 1

            # Copy sorted temp array back to nums
            for k in range(low, high + 1):
                nums[k] = temp[k - low]


        def ms(nums, low, high,counter):
            if low < high:
                mid = (low + high) // 2
                ms(nums, low, mid,counter)
                ms(nums, mid + 1, high,counter)
                merge(nums,low,high,mid,counter)
        low = 0
        high = len(nums) - 1
        counter=[0]
        ms(nums, low, high,counter)
        return(counter[0])
        


        
