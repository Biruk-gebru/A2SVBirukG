class Solution:
    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:
        def merge(node1, node2):
            # If both nodes are None, return None
            if not node1 and not node2:
                return None
            # If either node is None, return the non-None node
            if not node1:
                return node2
            if not node2:
                return node1
            # Merge values
            node1.val += node2.val
            # Recursively merge left and right subtrees
            node1.left = merge(node1.left, node2.left)
            node1.right = merge(node1.right, node2.right)
            return node1
        
        # Start merging from the roots of both trees
        return merge(root1, root2)
